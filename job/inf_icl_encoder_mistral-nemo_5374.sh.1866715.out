++ /home/z40436a/miniconda3/bin/conda shell.bash hook
+ eval 'export CONDA_EXE='\''/home/z40436a/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/z40436a/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause
__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ export CONDA_EXE=/home/z40436a/miniconda3/bin/conda
++ CONDA_EXE=/home/z40436a/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/z40436a/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/z40436a/miniconda3/bin/python
++ '[' -z '' ']'
++ export CONDA_SHLVL=0
++ CONDA_SHLVL=0
++ '[' -n '' ']'
++++ dirname /home/z40436a/miniconda3/bin/conda
+++ dirname /home/z40436a/miniconda3/bin
++ PATH=/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin
++ export PATH
++ '[' -z '' ']'
++ PS1=
++ conda activate base
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate base
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate base
+++ /home/z40436a/miniconda3/bin/conda shell.posix activate base
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/z40436a/miniconda3/bin:/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin'\''
export CONDA_PREFIX='\''/home/z40436a/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/z40436a/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/z40436a/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/home/z40436a/miniconda3/bin:/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin'\''
export CONDA_PREFIX='\''/home/z40436a/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/z40436a/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/z40436a/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/home/z40436a/miniconda3/bin:/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin
+++ PATH=/home/z40436a/miniconda3/bin:/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin
+++ export CONDA_PREFIX=/home/z40436a/miniconda3
+++ CONDA_PREFIX=/home/z40436a/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/home/z40436a/miniconda3/bin/conda
+++ CONDA_EXE=/home/z40436a/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/z40436a/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/z40436a/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate ME_241211
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate ME_241211
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate ME_241211
++ /home/z40436a/miniconda3/bin/conda shell.posix activate ME_241211
+ ask_conda='PS1='\''(ME_241211) '\''
export PATH='\''/home/z40436a/miniconda3/envs/ME_241211/bin:/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin'\''
export CONDA_PREFIX='\''/home/z40436a/miniconda3/envs/ME_241211'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''ME_241211'\''
export CONDA_PROMPT_MODIFIER='\''(ME_241211) '\''
export CONDA_PREFIX_1='\''/home/z40436a/miniconda3'\''
export CONDA_EXE='\''/home/z40436a/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/z40436a/miniconda3/bin/python'\'''
+ eval 'PS1='\''(ME_241211) '\''
export PATH='\''/home/z40436a/miniconda3/envs/ME_241211/bin:/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin'\''
export CONDA_PREFIX='\''/home/z40436a/miniconda3/envs/ME_241211'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''ME_241211'\''
export CONDA_PROMPT_MODIFIER='\''(ME_241211) '\''
export CONDA_PREFIX_1='\''/home/z40436a/miniconda3'\''
export CONDA_EXE='\''/home/z40436a/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/z40436a/miniconda3/bin/python'\'''
++ PS1='(ME_241211) '
++ export PATH=/home/z40436a/miniconda3/envs/ME_241211/bin:/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin
++ PATH=/home/z40436a/miniconda3/envs/ME_241211/bin:/home/z40436a/miniconda3/condabin:/opt/conda/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/z40436a/.local/bin:/home/z40436a/bin
++ export CONDA_PREFIX=/home/z40436a/miniconda3/envs/ME_241211
++ CONDA_PREFIX=/home/z40436a/miniconda3/envs/ME_241211
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=ME_241211
++ CONDA_DEFAULT_ENV=ME_241211
++ export 'CONDA_PROMPT_MODIFIER=(ME_241211) '
++ CONDA_PROMPT_MODIFIER='(ME_241211) '
++ export CONDA_PREFIX_1=/home/z40436a/miniconda3
++ CONDA_PREFIX_1=/home/z40436a/miniconda3
++ export CONDA_EXE=/home/z40436a/miniconda3/bin/conda
++ CONDA_EXE=/home/z40436a/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/z40436a/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/z40436a/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python ../src/inf_icl.py --icl_method encoder --seed 5374 --model_name mistralai/Mistral-Nemo-Instruct-2407
NAME
    inf_icl.py --icl_method encoder --seed 5374 --model_name mistralai/Mistral-Nemo-Instruct-2407

SYNOPSIS
    inf_icl.py --icl_method encoder --seed 5374 --model_name mistralai/Mistral-Nemo-Instruct-2407 VALUE

VALUES
    VALUE is one of the following:

     icl_method

     model_name

     seed
train_data_size::: 2690
test_data_size::: 299
Loading checkpoint shards:   0%|          | 0/5 [00:00<?, ?it/s]Loading checkpoint shards:  20%|██        | 1/5 [00:06<00:24,  6.01s/it]Loading checkpoint shards:  40%|████      | 2/5 [00:12<00:18,  6.01s/it]Loading checkpoint shards:  60%|██████    | 3/5 [00:19<00:13,  6.57s/it]Loading checkpoint shards:  80%|████████  | 4/5 [00:26<00:06,  6.67s/it]Loading checkpoint shards: 100%|██████████| 5/5 [00:33<00:00,  6.81s/it]Loading checkpoint shards: 100%|██████████| 5/5 [00:33<00:00,  6.63s/it]
Device set to use cuda:0
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
Setting `pad_token_id` to `eos_token_id`:2 for open-end generation.
###5shot
Traceback (most recent call last):
  File "/data/group1/z40436a/ME/URL_Citation_Classification_Intermediate/job/../src/inf_icl.py", line 258, in <module>
    main(c)
  File "/data/group1/z40436a/ME/URL_Citation_Classification_Intermediate/job/../src/inf_icl.py", line 231, in main
    outputs = pipe(
              ^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/pipelines/text_generation.py", line 270, in __call__
    return super().__call__(chats, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/pipelines/base.py", line 1282, in __call__
    outputs = list(final_iterator)
              ^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/pipelines/pt_utils.py", line 124, in __next__
    item = next(self.iterator)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/pipelines/pt_utils.py", line 125, in __next__
    processed = self.infer(item, **self.params)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/pipelines/base.py", line 1208, in forward
    model_outputs = self._forward(model_inputs, **forward_params)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/pipelines/text_generation.py", line 370, in _forward
    generated_sequence = self.model.generate(input_ids=input_ids, attention_mask=attention_mask, **generate_kwargs)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/generation/utils.py", line 2252, in generate
    result = self._sample(
             ^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/generation/utils.py", line 3251, in _sample
    outputs = self(**model_inputs, return_dict=True)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/models/mistral/modeling_mistral.py", line 1070, in forward
    outputs = self.model(
              ^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/models/mistral/modeling_mistral.py", line 795, in forward
    layer_outputs = decoder_layer(
                    ^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/models/mistral/modeling_mistral.py", line 528, in forward
    hidden_states, self_attn_weights, present_key_value = self.self_attn(
                                                          ^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/z40436a/miniconda3/envs/ME_241211/lib/python3.12/site-packages/transformers/models/mistral/modeling_mistral.py", line 456, in forward
    attn_output = torch.nn.functional.scaled_dot_product_attention(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.85 GiB. GPU 0 has a total capacity of 31.74 GiB of which 1.64 GiB is free. Process 231445 has 30.10 GiB memory in use. Of the allocated memory 27.81 GiB is allocated by PyTorch, and 1.92 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
